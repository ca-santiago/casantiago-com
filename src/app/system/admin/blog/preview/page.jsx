'use client';
import RenderRawEntry from '@/components/blog/rawRenderer';
import React from 'react';

const content = {
  "title": "<h1 class=\"content-header\">Setting the content</h1>",
  "content": "<blockquote><p><code>What is an .apk file?</code></p></blockquote><p>An Android Package Kit (APK) is the package file format used by the Android OS for distribution and installation of mobile apps. It is similar to the .exe file you have on Windows OS, a .apk file is for android.</p><p>Click <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://google.com\">here</a> to navigate to google.com</p><h1><strong>Debug APK</strong></h1><h2><strong>What can I use it for?</strong></h2><p>A debug .apk file will allow you to install and test your app before publishing to app stores. Mind you, this is not yet ready for publishing, and there are quite a few things you’ll need to do to before you can publish. Nevertheless, it’ll be useful for initial distribution and testing.</p><p>You’ll need to enable debugging options on your phone to run this apk</p><ol><li><p>Download Music (up to 10,000 songs on a maximum of 5 devices under the same account)</p></li><li><p>Discover Music (the system will provide a tailored playlist generated by their algorithm)</p></li><li><p>Spotify Connect (provide a grant to play your music on different devices, you can use your mobile phone as a control for playing music on your PC under the same account)</p></li><li><p>Discover Friend Activities, what music they like (allows you to see what your friends you follow are listening to in real-time, and also will have friend recommendations in your search lists when connected to other social media apps like Facebook, Instagram, etc.)</p></li><li><p>Can share music with your friends through the other platform (Copy song links, embed code and Spotify URL, and share to your other social media apps)</p></li></ol><p></p><h2><strong>Prerequisite:</strong></h2><ul><li><p>react-native version &gt; 0.58</p></li><li><p>react-native version &gt; 0.58</p></li><li><p>react-native version &gt; 0.58</p></li></ul><h2><strong>How to generate one in 3 steps?</strong></h2><p><em>Step 1:</em> Go to the root of the project in the terminal and run the below command:</p><p>Place your terminal directory to <em>android</em> using:<br><code>cd android</code></p><p>For Windows,<br><code>gradlew assembleRelease</code></p><p>For Linux and Mac OSX:<br><code>./gradlew assembleRelease</code></p><p>ou will need a Java generated signing key which is a keystore file used to generate a React Native executable binary for Android. You can create one using the <em>keytool</em> in the terminal with the following command</p><p><code>keytool -genkey -v -keystore your_key_name.keystore -alias your_key_alias -keyalg RSA -keysize 2048 -validity 10000</code></p><p>Once you run the keytool utility, you’ll be prompted to type in a password.<br>*<em>Make sure you remember the password</em></p><pre><code class=\"hljs language-javascript\">signingConfigs { \n  release {\n    storeFile file('your_key_name.keystore')\n    storePassword System.console().readLine(\"\\nKeystorepassword:\")\n    keyAlias System.console().readLine(\"\\nAlias: \")\n    keyPassword System.console().readLine(\"\\nAlias password: \")\n  }\n}</code></pre><hr><p></p>"
};

const ContentPreview = () => {
  return (
    <RenderRawEntry title={content.title} content={content.content} />
  );
}

export default ContentPreview;
